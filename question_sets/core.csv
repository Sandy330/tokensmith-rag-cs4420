question,reference_text,keywords,pages
"What is atomicity?","Atomicity means a transaction’s actions are all-or-nothing: if any operation fails, the whole transaction is rolled back.","atomicity;transaction;rollback;all-or-nothing","Ch2 p.15"
"How is OLAP different from OLTP?","OLAP supports analytical, read-heavy queries on historical data; OLTP supports short, write-heavy transactional workloads.","OLAP;OLTP;analytical;transactional;workloads","Ch10 p.4"
"Define consistency in ACID.","Consistency ensures a transaction brings the database from one valid state to another, preserving integrity constraints.","consistency;ACID;constraints;valid state","Ch2 p.16"
"What is isolation?","Isolation makes concurrent transactions appear to execute serially, preventing intermediate effects from leaking.","isolation;serializability;concurrency;interleaving","Ch3 p.2"
"What is durability?","Durability guarantees that once a transaction commits, its effects persist despite crashes.","durability;commit;crash;persist","Ch2 p.17"
"Define serializability.","Serializability is the correctness criterion where a concurrent schedule is equivalent to some serial order of transactions.","serializability;schedule;equivalence;serial order","Ch3 p.9"
"What is conflict-serializability?","A schedule is conflict-serializable if it can be transformed to a serial one by swapping non-conflicting operations.","conflict-serializable;precedence graph;swap;non-conflict","Ch3 p.12"
"How do you test conflict-serializability?","Build a precedence graph from conflicting operations; the schedule is conflict-serializable iff the graph is acyclic.","precedence graph;cycle;conflict;test","Ch3 p.13"
"What is view-serializability?","View-serializability requires equivalent reads/writes and final writes compared to a serial schedule; it’s more permissive than conflict-serializability.","view-serializable;reads-from;final write;equivalence","Ch3 p.15"
"What is a schedule?","A schedule is an interleaving of operations from multiple transactions that preserves each transaction’s program order.","schedule;interleaving;transactions;order","Ch3 p.8"
"Explain two-phase locking (2PL).","2PL requires each transaction to acquire all needed locks before releasing any; growing then shrinking phases.","2PL;locks;growing;shrinking;concurrency control","Ch3 p.20"
"What is strict 2PL?","Strict 2PL holds all write locks until commit/abort, preventing cascading aborts and ensuring recoverability.","strict 2PL;write locks;commit;recoverable","Ch3 p.21"
"What is deadlock and how to handle it?","Deadlock is a cycle of waiting among transactions; handle via prevention, avoidance, or detection+timeout/abort.","deadlock;waits-for;cycle;detection;prevention","Ch3 p.25"
"What is the waits-for graph?","The waits-for graph has an edge Ti→Tj if Ti waits for a lock held by Tj; a cycle indicates deadlock.","waits-for graph;cycle;deadlock;locks","Ch3 p.26"
"Define phantom anomaly.","Phantoms arise when range predicates see different matching sets due to inserts/deletes; solved by predicate/index locking.","phantom;range query;predicate lock;index lock","Ch3 p.30"
"What is write-ahead logging (WAL)?","WAL requires log records to be forced to stable storage before the corresponding data pages are written.","WAL;log;force;stable storage;redo","Ch4 p.5"
"Explain ARIES redo/undo idea.","ARIES repeats history during redo to reapply updates, then undoes loser transactions using compensation log records.","ARIES;redo;undo;CLR;repeat history","Ch4 p.12"
"What is a checkpoint?","A checkpoint records a snapshot (active transactions, dirty pages) to bound recovery work after crashes.","checkpoint;recovery;dirty pages;active txns","Ch4 p.9"
"Define primary vs secondary index.","Primary index follows the data file’s sort order on the search key; secondary index is on a non-ordering attribute.","primary index;secondary index;clustered;unclustered","Ch8 p.6"
"What is a clustered index?","A clustered index orders the data records by the index key, improving range scans but limiting one per table.","clustered;range scan;data order;one per table","Ch8 p.7"
"Compare B+Tree vs hash index.","B+Trees support range queries and order; hash indexes excel at equality lookups but not ranges.","B+Tree;hash;range;equality;order","Ch8 p.12"
"What is a heap file?","A heap file stores records in no particular order; inserts are fast, scans require full pass without an index.","heap file;unordered;insert;scan","Ch7 p.3"
"Define join algorithms: NLJ vs Hash Join.","Nested loop join probes inner for each outer tuple; hash join partitions on join key to match in buckets.","join;nested loop;hash join;partition","Ch9 p.10"
"Star schema vs snowflake.","Star has denormalized dimensions around a fact table; snowflake normalizes dimensions into multiple related tables.","star schema;snowflake;dimensions;fact;OLAP","Ch10 p.12"
"Explain normalization (3NF/BCNF).","Normalization reduces redundancy and anomalies; BCNF requires every determinant to be a candidate key, 3NF slightly weaker.","normalization;BCNF;3NF;redundancy;anomalies","Ch6 p.14"
"Define functional dependency (FD).","X→Y holds if attribute set X functionally determines Y; used to derive keys and normalization rules.","functional dependency;FD;determinant;keys","Ch6 p.5"
"Explain foreign key constraints.","A foreign key in child table must match a candidate key in the parent, ensuring referential integrity.","foreign key;referential integrity;parent;child","Ch5 p.9"
"Snapshot vs streaming isolation.","Snapshot isolation reads from a consistent snapshot using MVCC; streaming isolation handles unbounded, time-ordered data.","snapshot;MVCC;isolation;streaming;timestamp","Ch11 p.6"
"CAP theorem quick definition.","In a partition, a distributed system must choose between consistency and availability; you can’t have all three fully.","CAP;consistency;availability;partition tolerance","Ch12 p.3"
"Eventual consistency.","Replicas may temporarily diverge but converge in the absence of new updates.","eventual consistency;replicas;converge;staleness","Ch12 p.6"
